<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- springmvc.xml的约束 -->

    <!-- 配置 spring创建容器时，要扫描的包
    每新增一个包，就要在springmvc.xml中增加扫描的包！！
    -->
    <context:component-scan base-package="demo1_param" />
    <context:component-scan base-package="demo2_response" />

    <!-- 2020-01-29 20:34:58
    前端控制器：指定哪些静态资源不被拦截
    location 是指webapp目录下的所在路径，mapping 是指要处理的映射
    -->
    <!-- 路径包含/js/， **表示任意资源 -->
    <mvc:resources location="/js/" mapping="/js/**"  />
<!--    <mvc:resources location="/css/" mapping="/css/**"/>-->
<!--    <mvc:resources location="/images/" mapping="/images/**"/>-->

    <!-- 配置视图解析器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
        <!-- 2020-01-26 21:14:07
        value="/WEB-INF/pages/" 加斜杠，表示在项目根目录的 WEB-INF/pages/ 这个路径。而：
        value="WEB-INF/pages/" 不加斜杠，就代表在当前路径去找对应的文件，

        当不加斜杠时：
        (1)如果类前加了一个 @RequestMapping(path) 注解的时候，就相当于多了一层路径，所以报404的错，
        (2)而如果类前没有加 @RequestMapping(path = "/test") 注解，则表示方法的注解都在项目路径下去找，
        -->
        <property name="prefix" value="/WEB-INF/pages/" /> <!-- 注意 value="/WEB-INF/pages/" 斜杠的坑嗷 -->
        <property name="suffix" value=".jsp" />
    </bean>


    <!-- 配置自定义类型转换器
    class属性中的……太长了吧！
    -->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean" >
        <property name="converters">
            <set> <!-- 属性converters是set集合类型的 -->
                <!-- 把自定义类型转换器配置进来嗷！ -->
                <bean class="demo1_param.utils.StringToDateConverter" />
            </set>
        </property>
    </bean>
    <!-- 要让自定义类型转换器生效，还得在
    <mvc:annotation-driven /> 中配置 conversion-service属性！！
    <mvc:annotation-driven conversion-service="自定义类型转换器的bean那个id！"/>
    -->

    <!-- 配置spring开启注解mvc的支持
    <mvc:annotation-driven/> 标签的作用：
    使得@RequestMapping,@RequestParam,@ExceptionHandler 这些注解生效
    -->
<!--    <mvc:annotation-driven  />-->

    <!-- 要让自定义类型转换器生效，还得在
    <mvc:annotation-driven /> 中配置 conversion-service属性！！
    <mvc:annotation-driven conversion-service="自定义类型转换器的bean那个id！"/>
    -->
    <mvc:annotation-driven conversion-service="conversionService"  />

</beans>