{"version":3,"sources":["views/MyTable.jsx","component/App.jsx","index.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","background","default","TableRow","useStyles","makeStyles","table","minWidth","CustomizedTables","props","classes","rows","TableContainer","component","Paper","Table","className","aria-label","TableHead","align","TableBody","map","row","key","id","scope","userName","birthday","sex","address","App","state","list","findAll","axios","get","then","response","data","console","log","setState","this","Button","variant","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"mUAUMA,EAAkBC,aAAW,SAAAC,GAAK,MAAK,CACzCC,KAAM,CACFC,gBAAiBF,EAAMG,QAAQC,OAAOC,MACtCC,MAAON,EAAMG,QAAQC,OAAOG,OAEhCC,KAAM,CACFC,SAAU,OANMV,CAQpBW,KAEEC,EAAiBZ,aAAW,SAAAC,GAAK,MAAK,CACxCY,KAAM,CACF,qBAAsB,CAClBV,gBAAiBF,EAAMG,QAAQU,WAAWC,aAH/Bf,CAMnBgB,KAcJ,IAAMC,EAAYC,YAAW,CACzBC,MAAO,CACHC,SAAU,OAaH,SAASC,EAAkBC,GACtC,IAAMC,EAAUN,IACTO,EAAQF,EAARE,KACP,OACI,kBAACC,EAAA,EAAD,CAAgBC,UAAWC,KACvB,kBAACC,EAAA,EAAD,CAAOC,UAAWN,EAAQJ,MAAOW,aAAW,oBACxC,kBAACC,EAAA,EAAD,KACI,kBAACf,EAAA,EAAD,KACI,kBAACjB,EAAD,WACA,kBAACA,EAAD,CAAiBiC,MAAM,SAAvB,YACA,kBAACjC,EAAD,CAAiBiC,MAAM,SAAvB,YACA,kBAACjC,EAAD,CAAiBiC,MAAM,SAAvB,OACA,kBAACjC,EAAD,CAAiBiC,MAAM,SAAvB,aAGR,kBAACC,EAAA,EAAD,KACKT,EAAKU,KAAI,SAAAC,GAAG,OACT,kBAACvB,EAAD,CAAgBwB,IAAKD,EAAIE,IACrB,kBAACtC,EAAD,CAAiB2B,UAAU,KAAKY,MAAM,OACjCH,EAAIE,IAET,kBAACtC,EAAD,CAAiBiC,MAAM,SAASG,EAAII,UACpC,kBAACxC,EAAD,CAAiBiC,MAAM,SAASG,EAAIK,UACpC,kBAACzC,EAAD,CAAiBiC,MAAM,SAASG,EAAIM,KACpC,kBAAC1C,EAAD,CAAiBiC,MAAM,SAASG,EAAIO,gB,IC/D3CC,E,2MACjBC,MAAQ,CAEJC,KAAO,I,EAIXC,QAAS,WAKLC,IAAMC,IAJM,sCAIGC,MAAM,SAAAC,GACjB,IAAML,EAAOK,EAASC,KACtBC,QAAQC,IAAKR,GACb,EAAKS,SAAU,CAACT,a,wEAKf,IACEA,EAAQU,KAAKX,MAAbC,KACP,OACI,6BACI,kBAACW,EAAA,EAAD,CAAQC,QAAQ,YAAYlD,MAAM,UAAUmD,QAASH,KAAKT,SAA1D,qBAIA,6BAEA,kBAAC,EAAD,CAAStB,KAAMqB,S,GA9BEc,aCCjCC,IAASC,OAAQ,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a3c18962.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\n// const rows = [\r\n//     createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n//     createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//     createData('Eclair', 262, 16.0, 24, 6.0),\r\n//     createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//     createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n// ];\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n\r\n/* 2020-02-04 19:55:03\r\n* 后端返回的数据格式：class java.util.ArrayList 数组嗷！\r\n* [ User{id=41, userName='老王', birthday=Wed Feb 28 01:47:08 CST 2018, sex='男', address='北京'},\r\n    User{id=42, userName='小二王', birthday=Fri Mar 02 23:09:37 CST 2018, sex='女', address='北京金燕龙'},\r\n    User{id=43, userName='小二王', birthday=Sun Mar 04 19:34:34 CST 2018, sex='女', address='北京金燕龙'},\r\n    User{id=45, userName='传智播客', birthday=Sun Mar 04 20:04:06 CST 2018, sex='男', address='北京金燕龙'},\r\n    User{id=46, userName='老王', birthday=Thu Mar 08 01:37:26 CST 2018, sex='男', address='北京'}\r\n]\r\n*  */\r\nexport default function CustomizedTables( props ) { //传入形参是 props\r\n    const classes = useStyles();\r\n    const {rows} = props;\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell>id</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">userName</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">birthday</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">sex</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">address</StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map(row => (\r\n                        <StyledTableRow key={row.id}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                {row.id}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{row.userName}</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{row.birthday}</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{row.sex}</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{row.address}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {Button} from '@material-ui/core'\r\n\r\nimport MyTable from \"../views/MyTable\";\r\n\r\n/* 2020-02-04 19:55:03\r\n* 后端返回的数据格式：class java.util.ArrayList 数组嗷！\r\n* [ User{id=41, userName='老王', birthday=Wed Feb 28 01:47:08 CST 2018, sex='男', address='北京'},\r\n    User{id=42, userName='小二王', birthday=Fri Mar 02 23:09:37 CST 2018, sex='女', address='北京金燕龙'},\r\n    User{id=43, userName='小二王', birthday=Sun Mar 04 19:34:34 CST 2018, sex='女', address='北京金燕龙'},\r\n    User{id=45, userName='传智播客', birthday=Sun Mar 04 20:04:06 CST 2018, sex='男', address='北京金燕龙'},\r\n    User{id=46, userName='老王', birthday=Thu Mar 08 01:37:26 CST 2018, sex='男', address='北京'}\r\n]\r\n*  */\r\nexport default class App extends Component{\r\n    state = { //状态存储数据\r\n        // list : [ {id:42, userName:'小儿王', birthday:'Wed Feb 28 01:47:08 CST 2018', sex:'男', address:'北京'} ]  //后端返回的数据是 数组形式的\r\n        list : []\r\n    };\r\n\r\n\r\n    findAll= ()=>{\r\n        const url = \"http://localhost:8080/user/findAll\";\r\n        /* 直接请求后端  http://localhost:8080/user/findAll\r\n        * 同时，后端的控制器UserController 加注解 @CrossOrigin，表示可以跨域请求\r\n        *  */\r\n        axios.get(url).then( response => {\r\n            const list = response.data; //取得响应的数据 list\r\n            console.log( list );\r\n            this.setState( {list} );\r\n        } )\r\n    };\r\n\r\n\r\n    render(){\r\n        const {list} = this.state;\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.findAll} >\r\n                    Click to find all\r\n                </Button>\r\n\r\n                <hr />\r\n                {/* 把后端传来的数据list传给 <MyTable /> */}\r\n                <MyTable rows={list} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport App from \"./component/App.jsx\";\n\n/* 2020-02-04 19:55:03\n* 后端返回的数据格式：class java.util.ArrayList 数组嗷！\n* [ User{id=41, userName='老王', birthday=Wed Feb 28 01:47:08 CST 2018, sex='男', address='北京'},\n    User{id=42, userName='小二王', birthday=Fri Mar 02 23:09:37 CST 2018, sex='女', address='北京金燕龙'},\n    User{id=43, userName='小二王', birthday=Sun Mar 04 19:34:34 CST 2018, sex='女', address='北京金燕龙'},\n    User{id=45, userName='传智播客', birthday=Sun Mar 04 20:04:06 CST 2018, sex='男', address='北京金燕龙'},\n    User{id=46, userName='老王', birthday=Thu Mar 08 01:37:26 CST 2018, sex='男', address='北京'}\n]\n*  */\n\n\nReactDOM.render( <App />, document.getElementById('root') );\n"],"sourceRoot":""}