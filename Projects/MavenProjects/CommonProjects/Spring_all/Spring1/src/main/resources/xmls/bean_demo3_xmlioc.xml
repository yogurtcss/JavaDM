<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- id 首字母应小写 -->

    <!-- 配置QueryRunner
    bean 标签的 scope 属性
    1.scope="singleton" 默认值，单例。一次只能创建一个对象，也就是只有一个实例
    2.scope="prototype" 原型，多例。
    一次可以创建多个对象，可以有多个实例，
    每次“请求”【即：将此bean 注入到另一个bean中，或者以程序的方式调用容器的 getBean()方法】，
    都会产生一个新的 bean 实例。
    -->
    <bean id="qr" class="org.apache.commons.dbutils.QueryRunner" scope="prototype" >
        <!-- 带参数的 QueryRunner 构造方法:
        QueryRunner queryRunner = new QueryRunner(dataSource);
        将 dataSource 传递进去，这样 update 或 query 方法内部就调用 this.getconnection 方法来从这个数据源获得连接，
        -->
        <constructor-arg name="ds" ref="dataSource" />
    </bean>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
        <!-- 连接数据库的必备信息 -->
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:5306/db1" />
        <property name="user" value="root" />
        <property name="password" value="root" />
    </bean>

    <bean id="accountDaoImpl" class="demo3_myxmlioc.dao.impl.AccountDaoImpl">
        <property name="qr" ref="qr" />
    </bean>
    <bean id="accountServiceImpl" class="demo3_myxmlioc.service.impl.AccountServiceImpl_OLD" >

        <!-- 如何在service层中，注入dao？

        注意，在AccountServiceImpl中，提供一个 setter方法！
        public void setaDao(AccountDao aDao) {
            this.aDao = aDao;
        }

        <property
            name="你要set的那个属性名XXX。默认是调用setXXX()方法"
                  - 写法是 对setXXX()方法 去掉set 取后半部分，然后首字母小写
                  - 如 类中是 setSex()方法，在这里 写法为 name="sex" //去掉set 取后半部分，然后首字母小写
            value="基本数据类型或String"
        />
        -->
        <property name="aDao" ref="accountDaoImpl" />
    </bean>


</beans>