<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 告知Spring在创建容器(应用上下文)时，要扫描的包 -->
    <context:component-scan base-package="demo3_myxmlioc"  />

    <bean id="proxyAccountService" factory-bean="beanFactory" factory-method="getAccountService_proxy" />
    <bean id="beanFactory" class="demo3_myxmlioc.factory.BeanFactory" >
        <!-- 注入service -->
        <property name="service" ref="accountServiceImpl" />
        <!-- 注入事务管理器 -->
        <property name="tsManager" ref="tsManager" />
    </bean>

    <bean id="accountDaoImpl" class="demo3_myxmlioc.dao.impl.AccountDaoImpl">
        <property name="qr" ref="qr" />
        <!-- 2020-01-23 17:09:16 -->
        <property name="connUtils" ref="connectionUtils" />
    </bean>

    <bean id="accountServiceImpl" class="demo3_myxmlioc.service.impl.AccountServiceImpl_OLD" >

        <!-- 如何在service层中，注入dao？

        注意，在AccountServiceImpl中，提供一个 setter方法！
        public void setaDao(AccountDao aDao) {
            this.aDao = aDao;
        }

        <property
            name="你要set的那个属性名XXX。默认是调用setXXX()方法"
                  - 写法是 对setXXX()方法 去掉set 取后半部分，然后首字母小写
                  - 如 类中是 setSex()方法，在这里 写法为 name="sex" //去掉set 取后半部分，然后首字母小写
            value="基本数据类型或String"
        />
        -->
        <property name="aDao" ref="accountDaoImpl" />
        <!-- 2020-01-23 16:33:49
        我佛了，忘记加在 AccountServiceImpl_OLD中，加事务管理器了！ -->
        <property name="tsManager" ref="tsManager" />
    </bean>


    <!-- 配置QueryRunner -->
    <bean id="qr" class="org.apache.commons.dbutils.QueryRunner" >
        <!-- 注入数据源
        2020-01-23 16:57:22
        因为每次从 连接池中取得的都是 “新的连接对象”，
        而我希望dao每次都是用同一个连接对象！
        就让dao的每个“数据库的操作”，都带上 connUtils.getThreadConnection(),
        ——每次都从 连接工具类中取连接，这样使用的都是同一个连接对象了！
        -->
<!--        <constructor-arg name="ds" ref="dataSource" />-->
    </bean>
    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:5306/db1" />
        <property name="user" value="root" />
        <property name="password" value="root" />
    </bean>


    <!-- 2020-01-23 16:22:45 -->
    <!-- 配置Connection的工具类 ConnectionUtils -->
    <bean id="connectionUtils" class="demo3_myxmlioc.utils.ConnectionUtils">
        <!-- 注入数据源-->
        <property name="ds" ref="dataSource"/>
    </bean>

    <!-- 配置事务管理器-->
    <bean id="tsManager" class="demo3_myxmlioc.utils.TransactionManager">
        <!-- 注入ConnectionUtils -->
        <property name="connUtils" ref="connectionUtils"/>
    </bean>

</beans>