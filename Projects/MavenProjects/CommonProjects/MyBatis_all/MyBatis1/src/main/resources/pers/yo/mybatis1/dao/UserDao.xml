<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <!-- 关于mapper的约束 -->

<!-- 基于代理Dao 实现CRUD操作。
使用要求：
1、持久层接口和持久层接口的映射配置必须在相同的包下
2、持久层映射配置中mapper标签的 namespace属性取值为 【持久层接口dao的全限定类名】
3、SQL 语句的配置标签 <select>,<insert>,<delete>,<update> 的 id 属性必须和 【持久层接口dao的方法名相同】。
-->

<!-- 持久层映射配置中mapper标签的 namespace属性取值为 【持久层接口dao的全限定类名】 -->
<mapper namespace="pers.yo.mybatis1.dao.UserDao"> <!-- 这里就是 此xml文件与持久层接口映射 的关键步骤！ -->
    <!-- 配置：查询所有 的操作
    SQL语句的配置标签 <select>,<insert>,<delete>,<update> 的 id 属性必须和 【持久层接口dao的方法名相同】。
    -->
    <select id="findAll" resultType="pers.yo.mybatis1.domain.User">
        select * from user
        <!--  resultType属性：用于指定结果集的类型。
        parameterType 属性 用于指定传入参数的类型。

        <select> 标签体中，写sql语句
        sql语句 中使用 #{} 字符：它代表占位符，相当于原来 jdbc 部分所学的？ 都是用于执行语句时替换实际的数据。
        具体的数据是由 #{} 里面的内容决定的。
        #{} 中内容的写法： 由于数据类型是基本类型，所以此处可以随意写。
        -->
    </select>
</mapper>