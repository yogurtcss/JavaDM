<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <!-- 关于mapper的约束 -->

<!-- 2020-01-12 17:04:33
<?xml version="1.0" encoding="utf-8" standalone="no"?> 必需在xml文件的第一行！！
<?xml version="1.0" encoding="UTF-8"?>  必须是 XML 文件的第一个元素且前面不能空格。

xml文件中第一个元素前面不能为空！！！！！！！！！！！！
<?xml ... ?> 前面不能有空格！！
-->



<!-- 基于代理Dao 实现CRUD操作。
使用要求：
1、持久层接口和持久层接口的映射配置必须在相同的包下
2、持久层映射配置中mapper标签的 namespace属性取值为 【持久层接口dao的全限定类名】
3、SQL 语句的配置标签 <select>,<insert>,<delete>,<update> 的 id 属性必须和 【持久层接口dao的方法名相同】。
-->

<!-- 持久层映射配置中mapper标签的 namespace属性取值为 【持久层接口dao的全限定类名】 -->
<!-- namespace= "pers.yo.mybatis1.dao.UserDao" -->
<mapper namespace="demo01.dao.UserDao"> <!-- 这里就是 此xml文件与持久层接口映射 的关键步骤！ -->
    <!-- 配置：查询所有 的操作
    SQL语句的配置标签 <select />、<insert />、<delete />、<update /> 的 id 属性必须和 【持久层接口dao的方法名相同】。
    -->
    <select id="findAll" resultType="demo01.domain.User">
        select * from user
        <!--  resultType属性：用于指定结果集的类型。
        parameterType 属性 用于指定传入参数的类型。

        <select> 标签体中，写sql语句
        sql语句的 #{} 字符：实际上就是调用了 【传入形参parameterType中的实例对象 的get方法】
        #{} 中内容的写法： 由于数据类型是基本类型，所以此处可以随意写。
        -->
    </select>
</mapper>